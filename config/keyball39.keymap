#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

// Handy to use these tap/holds

&mt {
    flavor = "balanced";
    tapping-term-ms = <800>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        /* This is still in an open PR - https://github.com/zmkfirmware/zmk/pull/2027*/
        volume_encoder: volume_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };
        window_encoder: window_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp RIGHT>;
        };
        scroll_encoder: scroll_encoder {
	        compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            tap-ms = <100>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = < 
&kp Y           &kp W           &kp F           &kp L           &kp M                           &kp K           &kp P           &kp O           &kp Q           &kp SINGLE_QUOTE
&kp U           &kp R           &mt LCTRL S     &mt LWIN N      &kp H                           &kp D           &mt LWIN T      &mt RCTRL E     &kp A           &kp I
&kp Z           &kp X           &kp C           &kp V           &kp J                           &kp B           &kp G           &kp COMMA       &kp DOT         &kp SEMI
&lt RAISE BSPC                                  &lt LOWER SPACE &mt LALT TAB    &mt LSHFT DEL   &lt LOWER HOME                                                  &lt RAISE RET
            >;
            sensor-bindings = <&window_encoder>;
        };

        LOWER {
            bindings = <
&kp ESC         &kp AT          &kp POUND       &kp DOLLAR      &kp PRCNT                       &kp CARET       &kp AMPS        &kp ASTRK       &kp SEMI        &kp BSPC
&kp TAB         &kp LPAR        &mt LCTRL LBRC  &mt LWIN FSLH   &kp LT                          &kp GT          &mt LWIN BSLH   &mt RCTRL RBRC  &kp RPAR        &kp ENTER
&kp INS         &kp PIPE        &kp MINUS       &kp LBKT        &kp EXCL                        &kp QMARK       &kp RBKT        &kp EQUAL       &kp GRAVE       &kp RALT
&kp BSPC                                        &to DEFAULT     &kp RALT        &kp RSHFT       &to LOWER                                                       &kp RET
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        RAISE {
            bindings = <
&kp ASTRK       &kp N7          &kp N8          &kp N9          &kp MINUS                       &kp C_VOL_UP    &kp PAGE_UP     &kp UP          &kp PAGE_DOWN   &kp C_PREV
&kp FSLH        &kp N4          &kp N5          &kp N6          &kp PLUS                        &kp C_MUTE      &kp LEFT        &kp DOWN        &kp RIGHT       &kp C_PP
&kp DOT         &kp N1          &kp N2          &kp N3          &kp ENTER                       &kp C_VOL_DN    &mkp LCLK       &mkp MCLK       &mkp RCLK       &kp C_NEXT
&kp N0                                          &to DEFAULT     &bootloader     &bt BT_DISC 0   &to RAISE                                                       &soft_off
            >;
            sensor-bindings = <&volume_encoder>;
        };
    };
};